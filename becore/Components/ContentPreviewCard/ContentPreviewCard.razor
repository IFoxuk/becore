<Card Class="content-preview-card"
      Width="Width.Is100"
      Height="Height.Is100"
      Shadow="Shadow.Large"
      Border="Border.Rounded"
      Background="Background.White"
      Overflow="Overflow.Hidden"
      Style="min-height: 300px; max-height: 350px; cursor: pointer; transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1); border: 1px solid rgba(0, 0, 0, 0.06);">

    <Link To="/Content"
          TextDecoration="TextDecoration.None"
          TextColor="TextColor.Body">
          
        <Div Class="card-image-container"
             Position="Position.Relative"
             Width="Width.Is100"
             Height="Height.Px(160)"
             Overflow="Overflow.Hidden"
             Background="Background.Light">
             
            <CardImage Source="@ImageUrl"
                      Alt="@Title"
                      Class="card-image"
                      Style="width: 100%; height: 100%; object-fit: cover; transition: transform 0.4s ease;" />
                      
            <Div Class="card-overlay"
                 Position="Position.Absolute"
                 Style="top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(45deg, rgba(0, 123, 255, 0.8), rgba(108, 117, 125, 0.8)); opacity: 0; transition: opacity 0.3s ease;"
                 Display="Display.Flex"
                 Flex="Flex.AlignItems.Center.JustifyContent.Center">
                 
                <Div Class="card-overlay-content"
                     TextColor="TextColor.White"
                     TextSize="TextSize.ExtraLarge"
                     Style="text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);">
                    <Icon Name="IconName.Eye" />
                </Div>
            </Div>
        </Div>
    </Link>

    <CardBody Class="card-content"
              Padding="Padding.Is4"
              Display="Display.Flex"
              Flex="Flex.Column"
              Style="flex: 1; gap: 12px; min-height: 0;">
              
        <Div Class="card-header">
            <CardTitle Class="card-title"
                      Size="5"
                      Margin="Margin.Is0.FromBottom"
                      Style="line-height: 1.3; letter-spacing: -0.02em; font-weight: 700; color: #2c3e50;"
                      Title="@Title">@Title</CardTitle>
                      
            <CardSubtitle Class="card-author"
                         TextColor="TextColor.Muted"
                         Style="font-weight: 500; font-size: 13px;">by @Author</CardSubtitle>
        </Div>
        
        <Div Class="card-tags"
             Display="Display.Flex"
             Flex="Flex.Wrap"
             Gap="Gap.Is1"
             Margin="Margin.Is2.FromTop.Is1.FromBottom">
             
            @if (Tags != null && Tags.Any())
            {
                @foreach (var tag in Tags.Take(3))
                {
                    <Badge Color="Color.Primary"
                           Class="tag"
                           Style="padding: 4px 10px; font-size: 11px; font-weight: 600; border-radius: 20px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); box-shadow: 0 2px 8px rgba(102, 126, 234, 0.3); transition: transform 0.2s ease;">@tag</Badge>
                }
                @if (Tags.Count() > 3)
                {
                    <Badge Color="Color.Secondary"
                           Class="tag tag-more"
                           Style="padding: 4px 10px; font-size: 11px; font-weight: 600; border-radius: 20px; background: linear-gradient(135deg, #95a5a6 0%, #7f8c8d 100%); box-shadow: 0 2px 8px rgba(149, 165, 166, 0.3); transition: transform 0.2s ease;">+@(Tags.Count() - 3)</Badge>
                }
            }
        </Div>
        
        <Div Class="card-description"
             Style="flex: 1; min-height: 0;"
             Display="Display.Flex"
             Flex="Flex.AlignItems.Start">
             
            <CardText Class="description-text"
                     Margin="Margin.Is0"
                     Style="line-height: 1.5; font-weight: 400; color: #34495e;">@Description</CardText>
        </Div>
    </CardBody>
</Card>

@code {
    [Parameter] public string Title { get; set; } = string.Empty;
    [Parameter] public string Author { get; set; } = string.Empty;
    [Parameter] public string ImageUrl { get; set; } = string.Empty;
    [Parameter] public string Description { get; set; } = string.Empty;
    [Parameter] public IEnumerable<string>? Tags { get; set; }
}
