@page "/"
@using becore.Services
@inject IVersionProvider VersionProvider
@inject AuthService AuthService
@inject ILogger<Dashboard> Logger
<Heading Size="HeadingSize.Is1" Margin="Margin.Is3.FromBottom">Blazorise</Heading>

<Paragraph>
    Blazorise is a component library built on top of Blazor and CSS frameworks like <Anchor To="https://getbootstrap.com/" Target="Target.Blank">Bootstrap</Anchor>, <Anchor To="https://fluent2.microsoft.design/" Target="Target.Blank">FluentUI2</Anchor>, <Anchor To="https://tailwindcss.com/" Target="Target.Blank">Tailwind</Anchor>, <Anchor To="https://bulma.io/" Target="Target.Blank">Bulma</Anchor>, <Anchor To="https://ant.design/" Target="Target.Blank">Ant Design</Anchor>, and <Anchor To="http://daemonite.github.io/material/" Target="Target.Blank">Material</Anchor>. It can be used to build responsive, single-page web applications.
</Paragraph>

<Alert Color="Color.Info" Visible>
    <Paragraph>
        This is a Blazorise Starting Template allowing you to quickly get started building your project!
    </Paragraph>

    <Paragraph>
        The following Blazorise packages have been installed for you:
    </Paragraph>

    <UnorderedList>
            <UnorderedListItem>Blazorise @($"v{VersionProvider.MilestoneVersion}")</UnorderedListItem>
            <UnorderedListItem>The <Anchor To="https://blazorise.com/docs/usage/bulma">Blazorise Bulma</Anchor> Provider</UnorderedListItem>
            <UnorderedListItem>The Blazorise FontAwesome Icon Provider</UnorderedListItem>
    </UnorderedList>

    <Paragraph>
        However Blazorise has many more extensions at your disposal.
        You can find them <Anchor To="https://blazorise.com/docs/extensions" Target="Target.Blank">here</Anchor>.
    </Paragraph>

    <Paragraph>
        Please visit the official <Anchor To="https://bootstrapdemo.blazorise.com/" Target="Target.Blank">Blazorise Demo</Anchor> for component examples.
    </Paragraph>
    <Paragraph>
        Please visit the official <Anchor To="https://blazorise.com/docs/" Target="Target.Blank">Blazorise Documentation</Anchor> to learn more about the available components.
    </Paragraph>
</Alert>

<Card Margin="Margin.Is3.FromTop">
    <CardHeader>
        <CardTitle>üîß Debug Tools</CardTitle>
    </CardHeader>
    <CardBody>
        <Button Color="Color.Warning" Clicked="DebugAuth">
            <Icon Name="IconName.Bug" />
            –û—Ç–ª–∞–¥–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        </Button>
        
        @if (!string.IsNullOrEmpty(debugResult))
        {
            <Alert Color="Color.Info" Visible="true" Margin="Margin.Is3.FromTop">
                <AlertMessage>–†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ª–∞–¥–∫–∏:</AlertMessage>
                <pre style="background: #f8f9fa; padding: 10px; border-radius: 4px; font-size: 12px;">@debugResult</pre>
            </Alert>
        }
    </CardBody>
    <DebugPanel></DebugPanel>
</Card>

@code {
    private string debugResult = string.Empty;
    
    private async Task DebugAuth()
    {
        try
        {
            debugResult = "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ—Ç–ª–∞–¥–∫–∞...";
            StateHasChanged();
            
            debugResult = await AuthService.DebugAuthAsync();
            StateHasChanged();
        }
        catch (Exception ex)
        {
            debugResult = $"–û—à–∏–±–∫–∞: {ex.Message}";
            StateHasChanged();
        }
    }
}
